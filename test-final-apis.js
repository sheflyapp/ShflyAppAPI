const axios = require('axios');

const BASE_URL = 'http://localhost:5000/api';

async function testFinalAPIs() {
  console.log('üéØ FINAL API TESTING - STATIC CONTENT');
  console.log('=====================================\n');

  try {
    // Test 1: Get all content
    console.log('1Ô∏è‚É£ Testing Get All Content...');
    const allContentResponse = await axios.get(`${BASE_URL}/content`);
    console.log(`‚úÖ Get All Content: ${allContentResponse.status} - Found ${allContentResponse.data.data.length} items\n`);

    // Test 2: Get privacy policy
    console.log('2Ô∏è‚É£ Testing Get Privacy Policy...');
    const privacyResponse = await axios.get(`${BASE_URL}/content/privacy-policy`);
    console.log(`‚úÖ Privacy Policy: ${privacyResponse.status} - Title: "${privacyResponse.data.data.title}"\n`);

    // Test 3: Get terms in Arabic
    console.log('3Ô∏è‚É£ Testing Get Terms in Arabic...');
    const termsArResponse = await axios.get(`${BASE_URL}/content/terms-conditions?lang=ar`);
    console.log(`‚úÖ Terms (AR): ${termsArResponse.status} - Title: "${termsArResponse.data.data.title}"\n`);

    // Test 4: Get help content
    console.log('4Ô∏è‚É£ Testing Get Help Content...');
    const helpResponse = await axios.get(`${BASE_URL}/content/help`);
    console.log(`‚úÖ Help Content: ${helpResponse.status} - Title: "${helpResponse.data.data.title}"\n`);

    // Test 5: Get onboarding content
    console.log('5Ô∏è‚É£ Testing Get Onboarding Content...');
    const onboardingResponse = await axios.get(`${BASE_URL}/content/onboarding`);
    console.log(`‚úÖ Onboarding: ${onboardingResponse.status} - Title: "${onboardingResponse.data.data.title}"\n`);

    // Test 6: Test non-existent content
    console.log('6Ô∏è‚É£ Testing Non-existent Content (should be 404)...');
    try {
      await axios.get(`${BASE_URL}/content/non-existent`);
    } catch (error) {
      if (error.response?.status === 404) {
        console.log(`‚úÖ Non-existent Content: 404 - Content not found (expected)\n`);
      } else {
        console.log(`‚ùå Non-existent Content: ${error.response?.status} - ${error.response?.data?.message}\n`);
      }
    }

    console.log('üéâ ALL STATIC CONTENT APIs WORKING PERFECTLY!');
    console.log('============================================');
    console.log('‚úÖ Content retrieval working');
    console.log('‚úÖ Multi-language support working');
    console.log('‚úÖ Error handling working');
    console.log('‚úÖ Sample content loaded successfully');

    console.log('\nüìã Available Content Types:');
    console.log('===========================');
    console.log('‚Ä¢ Privacy Policy - /api/content/privacy-policy');
    console.log('‚Ä¢ Terms & Conditions - /api/content/terms-conditions');
    console.log('‚Ä¢ Help Center - /api/content/help');
    console.log('‚Ä¢ Onboarding - /api/content/onboarding');
    console.log('‚Ä¢ All Content - /api/content');

    console.log('\nüåê Language Support:');
    console.log('===================');
    console.log('‚Ä¢ English (default) - ?lang=en');
    console.log('‚Ä¢ Arabic - ?lang=ar');

    console.log('\nüîß Admin Panel:');
    console.log('==============');
    console.log('‚Ä¢ URL: http://localhost:5000/admin-content-management.html');
    console.log('‚Ä¢ Features: Create, edit, delete content');
    console.log('‚Ä¢ Multi-language support');
    console.log('‚Ä¢ SEO management');

  } catch (error) {
    console.log(`‚ùå Test Failed: ${error.message}`);
    if (error.response) {
      console.log(`Status: ${error.response.status}`);
      console.log(`Response: ${JSON.stringify(error.response.data, null, 2)}`);
    }
  }
}

testFinalAPIs();
